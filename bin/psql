#!/bin/bash
set -e

# in case fd#9 is open; write messages there ; otherwise use fd#2
[ -t 9 ] && msgfd=9 || msgfd=2

command -v which >/dev/null 2>&1 || { echo "I require which but it's not installed.  Aborting." >&2; exit 1; }

for p in `which -a psql`;do
    [ "`realpath "$p"`" != "`realpath "$0"`" ] && psql="$p" && break
done

[ "$p" == "" ]  && echo "$0: ERROR: no psql on PATH?" && exit 1

#echo    "psql: $psql" >&$msgfd
#set >/tmp/_lastset

ARGS=()
for arg in "$@";do
    [ "$arg" != "-X" ] && ARGS+=( "$arg" )
done

#echo "PSQL_ARGS_IN:	$@" >&$msgfd
#echo "PSQL_ARGS_OUT:	${ARGS[@]}" >&$msgfd
#echo ls -l /proc/$$/fd/ >&$msgfd

# in case at least one -X is passed - only activate if PSQL_DEBUG is explicitly set to something
[[ "$#" != ${#ARGS[@]} ]] && [ "$PSQL_DEBUG" == "" ] && exec $psql "$@"

# if pg_regress is detected; but stderr is not a pipe => its a setup call
[[ "$PGAPPNAME" == pg_regress* ]] &&
	[ ! -p /proc/$$/fd/2 ] &&
	[ "$PSQL_DEBUGA1" == "" ] && exec $psql "$@"

[ "$PSQLRC" == "" ] && PSQLRC=~/.psqlrc

PSQLRC=<(
[ -e "$PSQLRC" ] && echo "\i $PSQLRC"
e='$e'
cat << EOF
-- save pid into file
\o /tmp/_pgsql_debug_pid
select pg_backend_pid();
\! sed -r 's/ +//g;/^[0-9]+$/p;d' -i /tmp/_pgsql_debug_pid
\o
\! echo "backend PID stored in /tmp/_pgsql_debug_pid" >&$msgfd
EOF
if [ "$PSQL_DEBUG" == "wait" ];then
cat << EOF
-- wait for debugger
\! echo 'waiting for debugger; connect to 5555 to get the actual PID!' >&$msgfd
\! cat /tmp/_pgsql_debug_pid | nc -l -w0 -p 5555
\! echo 'waiting a bit for gdb to buckle in...' >&$msgfd
\! sleep 3
EOF
fi
) exec $psql "${ARGS[@]}"
